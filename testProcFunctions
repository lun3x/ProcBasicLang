/*fac loop (p.23)*/
y:=1;
while !(x=1) do (
  y:=y*x;
  x:=x-1
)

//scope test (p.53)
y := 1;
x := 8;
z := 2;
begin
  var x := 0;
  begin
    var x := 5;
    y := x
  end
end

"y := 1;\nx := 8;\nz := 2;\nbegin\n  var x := 0;\n  begin\n    var x := 5;\n    y := x\n    y := x\n  end\nend"

x := 8;
y := 1;
z := 2;
begin
  var x := 5;
  y := x
end

"x := 8;\ny := 1;\nz := 2;\nbegin\n  var x := 5;\n  y := x\nend"


begin
  var x := 0;
  x := 1
end

"begin\n  var x := 0;\n  x := 2\nend"

x := 1;
begin
  var y := 10;
  proc p is (x := x * 10);
  call p
end

"x := 1;\nbegin\nvar y := 10;\nproc p is (x := x * 10);\ncall p\nend"


//scope test (p.53)
begin
  var x:=0;
  proc p is (x:=x*2);
  proc q is (call p);
  begin
    var x:=5;
    proc p is (x:=x+1;x:=x+1);
    call q;
    y:=x
  end
end

"begin\n  var x:=0;\n  proc p is x:=x*2;\n  proc q is call p;\n  begin\n    var x:=5;\n    proc p is (x:=x+1;x:=x+1);\n    call q;\n    y:=x\n  end\nend"
